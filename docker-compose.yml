services:
  postgres:
    image: postgres:15
    restart: always
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    # Garante que o backend só iniciará quando o banco de dados estiver pronto
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: ./apps/backend/Dockerfile
    container_name: backend
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    command: sh -c "npx prisma migrate deploy && npx prisma db seed && node dist/backend/main"
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: ./apps/frontend/Dockerfile
    container_name: frontend
    ports:
      - "5173:4173"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  pgdata:
